<!-- 프로필 이미지 선택과 Cropper.js를 위한 HTML -->
<form id="uploadForm" action="/profile/upload" method="post" enctype="multipart/form-data">
    <input type="file" id="profilePictureInput" name="profilePicture" accept="image/*" onchange="openCropper()">
    <button type="button" onclick="saveCroppedImage()" style="display: none;">저장</button>
</form>

<div id="cropperModal" class="cropper-modal" style="display: none;">
    <div class="cropper-container">
        <input type="file" id="cropperInput" style="display: none;">
        <div>
            <img id="croppedImage" src="" alt="크롭된 이미지">
            <button onclick="saveCroppedImage()">저장</button>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<script>
    let cropper;

    function openCropper() {
        const input = document.getElementById('profilePictureInput');
        const file = input.files[0];

        if (file) {
            document.getElementById('uploadForm').style.display = 'none';
            document.getElementById('cropperModal').style.display = 'block';

            const reader = new FileReader();
            reader.onload = function (event) {
                const image = document.getElementById('croppedImage');
                image.src = event.target.result;
                cropper = new Cropper(image, {
                    aspectRatio: 1,
                    viewMode: 1,
                    guides: true,
                    autoCropArea: 1
                });
            };
            reader.readAsDataURL(file);
        }
    }

    function saveCroppedImage() {
        const canvas = cropper.getCroppedCanvas();
        if (!canvas) {
            return;
        }

        canvas.toBlob((blob) => {
            const formData = new FormData();
            formData.append('croppedImage', blob, 'cropped.jpg');

            fetch('/profile/upload', {
                method: 'POST',
                body: formData
            })
            .then(response => response.text())
            .then(data => {
                console.log(data);
                location.reload();
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });
    }
</script>
